package main

/*
硬币。给定数量不限的硬币，币值为25分、10分、5分和1分，编写代码计算n分有几种表示法。(结果可能会很大，你需要将结果模上1000000007)

示例1:

 输入: n = 5
 输出：2
 解释: 有两种方式可以凑成总金额:
5=5
5=1+1+1+1+1
示例2:

 输入: n = 10
 输出：4
 解释: 有四种方式可以凑成总金额:
10=10
10=5+5
10=5+1+1+1+1+1
10=1+1+1+1+1+1+1+1+1+1
说明：

注意:

你可以假设：

0 <= n (总金额) <= 1000000

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/coin-lcci
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
*/
func main() {

}
func waysToChange(n int) int {
	//定义dp(i)=dp(i-25)+dp(i-10)+dp(i-5)+dp(i-1) 构成数字i有多少种方案
	m := []int{1, 5, 10, 25}
	dp := make([]int, n+1)
	dp[0] = 1
	for i := range m {
		for j := 1; j <= n; j++ {
			if j-m[i] >= 0 {
				dp[j] += dp[j-m[i]]
			}
		}
	}
	return dp[n] % 1000000007
}
